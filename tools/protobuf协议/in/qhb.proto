syntax = "proto3";
package qhb;
option java_package = "com.beiyou.game.proto";
option java_outer_classname = "GameProto";

// 统一回复数据格式
message Reply
{
    int32 code = 1;
    string msg = 2;
}

message RedBag
{
    int32 boom = 1;
    int32 money = 2;
    int32 totalCount = 3;
}

message Player
{
    int32 userId = 1;
    string nickName = 2;
    string headImg = 3;
    int32 sex = 4;
    string ip = 5;
    bool isApply = 6;
    double coin = 7;
    int32 state = 8;
    bool canDeal = 9;
    double currentScore = 10;           // user.getRoundScore() // 当前回合分
    double revenue = 11;
    double totalScore = 12;              // 玩家总盈利
    RedBag redBag = 13;
    double money = 14;                   // 玩家金币
    bool  isBoom = 15;                   // 玩家是否中雷
    double totalSendRedBag = 16;         // 玩家发包总额
    double totalGrabRedBag = 17;         // 玩家抢包总额
    int32 indexOfApplyList = 18;
}

message BankerInfo
{
    string bankerName = 1;
    string bankerHeadImg = 2;
    double bankerCoin = 3;
    double bankerCurrentScore = 4;
}

message TableInfo
{
    string tableId = 1;
    string seq = 2;
    int32 gameId = 3;
    int32 gameNo = 4;
    int32 minLimit = 5;
    int32 maxLimit = 6;
    repeated int32 bagMoneys = 7;
    int32 mult = 8;
    int32 state = 9;
    int32 bagNum = 10;
    repeated Player bingoUsers = 11;
    RedBag redBag = 12;
    BankerInfo bankerInfo = 13;
    int32 selfIndexInApplyList = 14;  // 进入桌子时命名为 remainNum；断线重连时竟然命名为 applyUserSize （狗屎）
    Player selfInfo = 15;
}

message ResultPlayer
{
    int32 userId = 1;
    string nickName = 2;
    string headImg = 3;
    int32 sex = 4;
    double startScore = 5;
    double currentScore = 6;
    double endScore = 7;
    double coin = 8;
    double money = 9;
}

/* ------------------------------------------------------------- *
 * ------------------------------------------------------------- *
 * -------------  如果发生异常则会回复 Reply 结构  --------------- *
 * ------------------------------------------------------------- *
 *---------------------------------------------------------------*/

// 此游戏未注册消息 但是包含此消息实现
// 消息类                    消息号                                    注册此消息游戏
// BindGameNoHandler        BIND_GAME_NO_HANDLER =2002                  骰宝
// GetAllUserHandler        GETUSERLIST_REQ = 2020                      奔驰宝马，龙虎，飞禽走兽
// GetRomeListHandler       GET_ROME_LIST = 20004                       三公，十三水，骰宝

// common 层消息
// 检测客户端延迟
// int DELAY_CHECK_REQ = 20010
message c2s_delayCheck
{

}
//DELAY_CHECK_RESP = 20011
message s2c_delayCheck
{
    Reply ret = 1;
}

// 挤下线
//FOUCED_OFFLINE_REQ = 3000
message c2s_foucedOffline
{
    int32 userId = 1;
}

//FOUCED_OFFLINE_RESP = 3001
message s2c_foucedOffline
{
    Reply ret = 1;
    //固定回复  账号在其他地方登录,连接断开,请重新登录
}

// 后台来的强制踢出用户
// 大厅踢出
// ADMIN_KICKEDOUT = 200
message c2s_adminKickedOut
{
    int32 userId = 1;
}

// 是不是傻
// 异常回复 ADMIN_KICKEDOUT = 200
// 非异常回复 PUSH_KICKEDOUT = 4001
message s2c_adminKickedOut
{
    Reply ret = 1;
   // string desc = 1; // 非异常回复 // 这点设计的不好 可以直接用 ret 结构
}

// 后台通知金币？
// 通知客户端刷新金币
// HALL_REFRESH_COIN = 100
message c2s_refreshCoin
{
    int32 userId = 1;
    int32 type = 2;
    int32 coin = 3;
}

// 异常 HALL_REFRESH_COIN = 100
// HALL_REFRESH_COIN = 100 回复来源
// 推送至客户端 PUSH_REFRESH_COIN = 2501
message s2c_refreshCoin
{
    int32 userId = 1;
    int32 coin = 2;
    bool isInTable = 3;     // 1-3 回复来源
    int32 type =4;
    int32 addCoin = 5;      // 1-5 推送至客户端
}

/* -------------------------------------------------------------------- */
/* -------------------------------------------------------------------- */
/* -------------------------------------------------------------------- */

// APPLY_REQ = 40004;
message c2s_apply
{
    RedBag redBag = 1;
}

// APPLY_RESP = 40005;       // 埋雷申请 - 返回
message s2c_apply
{
    Player applyPlayer = 1;
}

// DISAPPLY_REQ = 40006;     // 取消埋雷申请
message c2s_disApply
{

}
// DISAPPLY_RESP = 40007;    // 取消埋雷申请 - 返回
message s2c_disApply
{
    double coin = 1;
}

/** 加入牌桌请求 */
// JOIN_COIN_TABLE_REQ = 40000;
message c2s_joinTable
{
    string sid = 1;
    int32 tableType = 2;
}

/** 加入牌桌返回 */
// JOIN_COIN_TABLE_RESP = 40001;
message s2c_joinTable
{
    TableInfo tableInfo = 1;
}

/**获取玩家列表*/
// GET_USERLIST_REQ = 40020;
message c2s_getUserList
{
    int32 type = 1;  // 0 获取申请玩家列表 ;  1 获取所有玩家列表
}

// GET_USERLIST_RESP = 40021
message s2c_getUserList
{
    repeated Player users = 1;
    Player selfInfo = 2;                // 获取所有玩家信息时，没有这项
}

/** 抢红包请求 */
// QIANG_REQ = 40022;
message c2s_qiang
{

}

/** 玩家抢红包返回 */
// QIANG_RESP = 40023;
message s2c_qiang
{
    double money = 1;
    double coin = 2;
    bool  isBoom = 3;
}

/** 玩家抢红包推送 */
// PUSHBET_RESP = 40024;
message s2c_qiangPush
{
    Player qiangPlayer = 1;
}

/** 推送回合结算2015 */
// PUSH_ROUND_RESULT_RESP = 40025;
message s2c_roundResult
{
    repeated ResultPlayer resultPlayer = 1;     // bingoUsers
    string tableId = 2;
    int32 state = 3;
    string seq = 4;
    int32 gameId = 5;
    int32 gameNo = 6;
    RedBag redBag = 7;
    BankerInfo bankerInfo = 8;
    string time = 9;
    int32 selfIndexInApplyList = 10;
    Player player = 11;                 // 被推送的玩家信息
}

/** 玩家点击重新连接 */
// PUSH_USER_RECONNECT_REQ = 40026;
message c2s_reconnect
{
    int32 userId = 1;
}

// PUSH_USER_RECONNECT_RESP = 40027;
/** 推送玩家重连数据2033 */
// PUSH_RECONNECT_DATA_RESP = 40028
message s2c_reconnect
{
    TableInfo tableInfo = 1;
}

 /**用户退后台*/
// USER_ONBACK_REQ = 40036;
message c2s_userOnBack
{
    int32 onBack = 1;
}

// USER_ONBACK_RESP = 40037;
message s2c_userOnBack
{
    int32 userId = 1;
}

/** 玩家退出 */
// USER_QUIT_REQ = 40038;
message c2s_userQuit
{

}
// USER_QUIT_RESP = 40039;
message s2c_userQuit
{
    int32 userId = 1;
}


/* 超时操作反馈 */
// SEND_OPERATE_REQ = 40031;
message c2s_sendOperate
{
    int32 opType = 1;
}

/* 超时操作反馈返回 */
// SEND_OPERATE_RESP = 40032;
message s2c_sendOperate
{

}

/* 玩家配牌请求 */
// SET_CARDS_TEST = 20000;
message SetCardsTest
{
    int32 gameId = 1;
    int32 tabletype = 2;
    int32 deskNo = 3;
    string sendData = 4;
    string extraData = 5;
}

/** 同步玩家数据 **/
//SYNC_PALYER_INFO_REQ = 2072;
message c2s_SyncPlayerInfo
{
    int32 userId = 1;
}
//SYNC_PALYER_INFO_RESP = 2073;
message s2c_SyncPlayerInfo
{
    Player player = 1;
}


message KickedOutRequest{
    int32 userId    = 1;
}

message DelayQuitOfflineResponse{
    int32 userId              = 1;
}

message KickedOutResponse{
    string desc     = 1;
}

message SendRemainTimeResponse {
     int32 time               = 1;
     int32 type               = 2;
}

message HallRefreshCoinRequest{
    int32 userId    = 1;
    int32 type      = 2;
}

message HallRefreshCoinResponse{
    int32 userId        = 1;
    double coin         = 2;
    bool isInTable      = 3;
}

message SendStateChangeResponse{
    string tableId = 1;
    int32 state = 2;
    string seq = 3;
    int32 currentMoney = 4;
    int32 currentBoom = 5;
    string bankerName = 6;
    string bankerHeadImg = 7;
    double bankerCoin = 8;
    int32 bankerUserId = 9;
}

//推送金币刷新
message SendCoinRefreshResponse {
	int32 userId            = 1;
	double coin             = 2;
	bool isInTable          = 3;
	bool type               = 4;
	int32 addCoin           = 5;
}

//所有请求接口
message Request {
    enum CMD
    {
        UNKNOWN                      = 0;
        HALL_REFRESH_COIN            = 100;   //HallRefreshCoinRequest, HallRefreshCoinResponse

        // ** 申请埋雷
        APPLY_REQ = 40004;
        APPLY_RESP = 40005;

        /** 取消申请埋雷 */
        DISAPPLY_REQ = 40006;
        DISAPPLY_RESP = 40007;

        PUSH_STATE_CHANGE_RESP = 40009;

        /** 加入牌桌请求 */
	    JOIN_COIN_TABLE_REQ = 40000;
        JOIN_COIN_TABLE_RESP = 40001;

        /**获取玩家列表*/
        GET_USERLIST_REQ = 40020;
        GET_USERLIST_RESP = 40021;

        /** 抢红包请求 */
	    QIANG_REQ = 40022;
	    QIANG_RESP = 40023;
	    /** 玩家抢红包推送 */
        PUSHBET_RESP = 40024;

        /** 推送回合结算2015 */
	    PUSH_ROUND_RESULT_RESP = 40025;

        /** 玩家点击重新连接2030 */
	    PUSH_USER_RECONNECT_REQ = 40026;
        PUSH_USER_RECONNECT_RESP = 40027;
	    PUSH_RECONNECT_DATA_RESP = 40028;/** 推送玩家重连数据2033 */   // 2031 和 2033 合并成一个结构体
	    DELAYQUIT_OFFLINE_RESP       = 40029;    //超时踢出
        KICKEDOUT                    = 40030;    //KickedOutRequest,KickedOutResponse
        SEND_COIN_REFRESH            = 2062;  //推送金币刷新 SendCoinRefreshResponse

        /** 超时操作反馈 */
        SEND_OPERATE_REQ      = 40031;
        SEND_OPERATE_RESP     = 40032;

        /** 配牌器 **/
        SET_CARDS_TEST        = 40033;

        /** 同步玩家数据 **/
        SYNC_PALYER_INFO_REQ = 40034;
        SYNC_PALYER_INFO_RESP = 40035;

        /**用户退后台*/
        USER_ONBACK_REQ = 40036;
        USER_ONBACK_RESP = 40037;

        /** 玩家退出 */
	    USER_QUIT_REQ = 40038;
	    USER_QUIT_RESP = 40039;

	    SEND_REMAIN_TIME             = 40040; //推送延时 SendRemainTimeResponse
    }

    CMD   cmd                           = 1;      //访问接口
    c2s_apply apply	                    = 11;
    c2s_disApply disApply               = 12;
    c2s_joinTable joinTable		        = 13;
    c2s_getUserList getUserList         = 14;
    c2s_qiang qiang                     = 15;
    c2s_reconnect reconnect				= 16;
    c2s_userOnBack userOnBack			= 17;
    c2s_userQuit userQuit				= 18;
    KickedOutRequest kickedOutRequest              = 19;
    HallRefreshCoinRequest hallRefreshCoinRequest  = 20;
    c2s_sendOperate sendOperate         = 21;
    SetCardsTest  setCardsTest          = 22;
    c2s_SyncPlayerInfo syncPlayerInfo   = 23;
}

//所有应答接口
message Response {
    enum ErrorCode {
        NO_ERROR                        = 0;
        OK                              = 200;
        ERROR                           = 400;
        APPLY_ERROR                     = 3084;         // 当前房间人数已满~请选择其他房间加入试试
        TABLE_NOT_FOIND_ERROR           = 3008;         // 牌桌不存在")
        NO_CHARGE_ERROR                 = 3091;         // 请充值后游戏")
        USERBAN                         = 30002;        // 账号异常...无法开始游戏,请联系客服"),
        NOT_IN_TABLE                    = 3011;         // 未加入此房间,或者未坐下")
        ACCOUNT_NOT_ENOUGH_ERROR        = 3004;         // 当前余额不足")
        APPLY_HAS_ERROR                 = 3085;         // 您已经申请过了,请先取消申请")
        QIANG_ERROR                     = 3082;         // 手慢了,红包已经被抢空了")
        JOIN_TABLE_ERROR                = 3007;         // 加入牌桌失败")
        USER_LOGIN_ERROR                = 3001;         // token失效,登录校验失败")
        CHANNELID_GAMENO_ERROR          = 3003;         // channelId或gameNo错误")
        JOIN_MAX_ERROR                  = 3083;         // 当前房间人数已满~请选择其他房间加入试试")
        DISAPPLY_ERROR                  = 3087;         // 取消失败,该红包正在开抢中..")
        GETUSERLIST_ERROR               = 3081;         // 获取玩家列表")
        QIANG_STATE_ERROR               = 3089;         // 当前没有红包..")
        QIANG_SELF_ERROR                = 3088;         // 不能抢自己的红包..")
        RECONNET_ERROR                  = 3025;         // 重连失败"),
        FOUCEDOFFLINE                   = 30001;        // 账号在其他地方登录,连接断开,请重新登录")
        USER_ONBACK_ERROR               = 3056;         // 用户退后台消息异常")
        TABLE_QUIT_ERROR                = 3013;         // 游戏中无法退出~")

    }
    ErrorCode error                     = 1;// [default = NO_ERROR];   // 表示本次请求状态
    int64 serverTime                    = 2;                        // 服务器时间
    Request.CMD     cmd                 = 3;                        // 接口

    Reply ret                           = 4;

    s2c_apply sendApply                     = 11;
    s2c_disApply sendDisApply               = 12;
    s2c_joinTable sendJoinTable             = 13;
    s2c_getUserList sendGetUserList         = 14;
    s2c_qiang sendQiang                     = 15;
    s2c_qiangPush sendQiangPush             = 16;
    s2c_reconnect sendReconnect			    = 17;
    s2c_userOnBack sendUserOnBack		    = 18;
    s2c_userQuit sendUserQuit		        = 19;
    s2c_roundResult sendRoundResult         = 20;
    KickedOutResponse kickedOutResponse                                 = 21;
    DelayQuitOfflineResponse delayQuitOfflineResponse                   = 22;
    SendStateChangeResponse sendStateChangeResponse                     = 23;
    SendRemainTimeResponse sendRemainTimeResponse                       = 24;                       //推送延时
    SendCoinRefreshResponse sendCoinRefreshResponse                     = 25;
    HallRefreshCoinResponse hallRefreshCoinResponse                     = 26;
    s2c_sendOperate sendOperate             = 27;
    s2c_SyncPlayerInfo syncPlayerInfoResponse = 28 ;
}
