// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
     factor: {
      type: float
      value: 0.6
    }
     width: {
      type: float
      displayName:'宽度'
      value: 0.02
    }
     color: {
      type: color4
      displayName:'颜色'
      value: [10.0,10.0,10.0,1.0]
    }
  }
%}

%% vs {

precision highp float;

uniform mat4 cc_matViewProj;

    attribute vec4 a_position;
    attribute vec2 a_uv0;
    varying vec2 uv0;

    void main()
    {
        gl_Position = cc_matViewProj * a_position;
        uv0 = a_uv0;
    }
}

%% fs {

precision highp float;
                                 
    
    // 贴图采样器，来自于v2f管线
    uniform sampler2D texture;             
    // 当前点uv
    varying vec2 uv0;                
    
    uniform float factor;  
    uniform float width;  
    uniform vec4 color; 

    uniform float time;  
    void main()                                      
    {                                          
        vec4 texColor = texture2D(texture, uv0);  
    
        float distance = abs(uv0[0]+uv0[1]-tan(time))/1.414;   

        distance = 1.0-(1.0/width)*distance;  
        distance = max(distance, 0.0);  
        vec4 sample = vec4(0.0,0.0,0.0,0.0);  
        sample[0] = color[0] * distance;  
        sample[1] = color[1] * distance;  
        sample[2] = color[2] * distance;  
        sample[3] = distance;  

        float alpha = sample[3]*texColor[3];  
        texColor[0] = texColor[0] + sample[0]*alpha*factor;  
        texColor[1] = texColor[1] + sample[1]*alpha*factor;  
        texColor[2] = texColor[2] + sample[2]*alpha*factor;  
        gl_FragColor = texColor;  
    }
}
