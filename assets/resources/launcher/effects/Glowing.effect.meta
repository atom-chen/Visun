{
  "ver": "1.0.15",
  "uuid": "a584adb3-7e33-4e44-b222-cba658e54fb6",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n uniform mat4 cc_matViewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = cc_matViewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision highp float;\n\nuniform sampler2D texture;\n\nuniform vec3 iResolution;\nuniform vec4 color;\n\nvarying vec2 uv0;\n\nconst float radius = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    vec2 unit = 1.0 / iResolution.xy;\n    vec4 texel = texture2D(texture, uv);\n    vec4 finalColor = vec4(0.0);\n    float density = 0.0;\n\n    if(texel.a >= 1.0)\n    {\n        finalColor = texel;\n    }\n    else\n    {\n        for(int i = 0; i < (int(radius)); ++i)\n        {\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\n            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\n        }\n        density = density / radius;\n        finalColor = vec4(color.rgb * density, density);\n        finalColor += vec4(texel.rgb * texel.a, texel.a);\n    }\n    fragColor = finalColor;\n}\n\nvoid main()\n{\n    mainImage(gl_FragColor, uv0.xy);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}