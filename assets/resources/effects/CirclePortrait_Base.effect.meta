{
  "ver": "1.0.15",
  "uuid": "4cd9891e-00c1-42b6-ba4e-a75b97f47088",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\n    precision highp float;\n\n    uniform mat4 cc_matViewProj;\n    attribute vec4 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main()\n    {\n        gl_Position = cc_matViewProj * a_position;\n        uv0 = a_uv0;\n    }\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\n   precision highp float;\n\n    \n    uniform sampler2D texture;\n    \n    varying vec2 uv0;\n    \n    uniform float u_edge;\n\n    uniform vec4 color0; \n\n  uniform float edge_blur; \n\n#if USE_EDGE_COLOR\n    uniform vec4 edge_color0; \n#endif\n\nvec4 drawCircle() {\n    float edge = u_edge;\n    float dis = 0.0;\n\n    vec2 uv = uv0;\n         \n        if ( uv.x < edge )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2(edge, edge) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2(edge, (1.0 - edge)) );\n            }\n        }\n        else if ( uv.x > (1.0 - edge) )\n        {\n            if ( uv.y < edge )\n            {\n                dis = distance( uv, vec2((1.0 - edge), edge ) );\n            }\n            if ( uv.y > (1.0 - edge) )\n            {\n                dis = distance( uv, vec2((1.0 - edge), (1.0 - edge) ) );\n            }\n        }\n\n        \n        vec4 color = color0 * texture2D(texture,uv);\n        \n        vec4 edge_color = color;\n        \n        float blur = edge_blur;\n\n      \n      #if USE_EDGE_COLOR\n        \n        #if USER_TEXTURE_COLOR\n          edge_color = edge_color0  * texture2D(texture,uv);\n        #else\n          edge_color = edge_color0;\n        #endif\n      #endif\n        \n        if(dis > 0.001)\n        {\n            \n            float gap = edge * blur;\n            if(dis <= edge - gap)\n            {\n                color = color;\n            }\n            else if(dis <= edge)\n            {\n                \n                float t = smoothstep(0.,gap,edge-dis);\n                \n                \n                color = vec4(edge_color.rgb,t * edge_color.a);\n            }else{\n                \n                color = vec4(edge_color.rgb,0.); \n            }\n        }\n        else\n        {\n          color =  color;\n        }\n    return  color; \n}\n\n    void main()\n    {\n      vec4 color = drawCircle();\n      gl_FragColor = color;\n    }\n\n\n"
    }
  ],
  "subMetas": {}
}