{
  "ver": "1.0.15",
  "uuid": "a55d2eb5-4206-4ed6-b7dd-5c56ece6e5f7",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec4 a_color;\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_fragmentColor;\n\nvoid main () {\n\tgl_Position = cc_matViewProj * vec4(a_position, 1);\n\tv_fragmentColor = a_color;\n\tv_uv0 = a_uv0;\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision highp float;\n\nvarying vec4 v_fragmentColor;\nvarying vec2 v_uv0;\n\nuniform sampler2D texture;\n\nvec4 composite(vec4 over, vec4 under)\n{\n\treturn over + (1.0 - over.a) * under;\n}\n\nvoid main () {\n\t\n\n\tfloat u_radius = 0.02;\n\tfloat u_threshold = 1.0;\n\tvec3 u_outlineColor = vec3(0.8,0.8,0.8);\n\n\tfloat radius = u_radius;\n    vec4 accum = vec4(0.0);\n    vec4 normal = vec4(0.0);\n    \n    normal = texture2D(texture, vec2(v_uv0.x, v_uv0.y));\n    \n    accum += texture2D(texture, vec2(v_uv0.x - radius, v_uv0.y - radius));\n    accum += texture2D(texture, vec2(v_uv0.x + radius, v_uv0.y - radius));\n    accum += texture2D(texture, vec2(v_uv0.x + radius, v_uv0.y + radius));\n    accum += texture2D(texture, vec2(v_uv0.x - radius, v_uv0.y + radius));\n    \n    accum *= u_threshold;\n    accum.rgb =  u_outlineColor * accum.a;\n    accum.a = 1.0;\n    \n    normal = ( accum * (1.0 - normal.a)) + (normal * normal.a);\n    \n    gl_FragColor = v_fragmentColor * normal;\n}\n\n\n"
    }
  ],
  "subMetas": {}
}